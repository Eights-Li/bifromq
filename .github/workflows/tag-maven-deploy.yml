# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: tag push maven deploy

on:
  push:
    tags:
      - v[0-9].[0-9].[0-9]**
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml

      - name: Set up Maven Central
        uses: actions/setup-java@v4
        with: # running setup-java again overwrites the settings.xml
          java-version: '17'
          distribution: 'temurin'
          server-id: sonatype-nexus-repository # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase

      - name: Publish to Maven Central
        run: mvn clean deploy -P maven-central-deploy -pl :bifromq-plugin-archetype,:bifromq-plugin-context,:bifromq-plugin-main,:bifromq-plugin-auth-provider,:bifromq-plugin-event-collector,:bifromq-plugin-resource-throttler,:bifromq-plugin-setting-provider -am -DskipTests
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      # publish to bos
      - name: Set up BoS Repo
        uses: actions/setup-java@v4
        with: # running setup-java again overwrites the settings.xml
          java-version: '17'
          distribution: 'temurin'
          server-id: bos-repo # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: BOS_REPO_AK # env variable for username in deploy
          server-password: BOS_REPO_SK # env variable for token in deploy

      - name: Publish to BoS Repo
        run: mvn clean deploy -P bos-repo-deploy -pl :bifromq-plugin-context,:bifromq-plugin-main,:bifromq-plugin-auth-provider,:bifromq-plugin-event-collector,:bifromq-plugin-resource-throttler,:bifromq-plugin-sub-broker,:bifromq-plugin-setting-provider,:base-env-provider-spi,:base-kv-store-balance-spi,:bifromq-dist-spi -am -DskipTests -Dbos.repo.release=$BOS_REPO_RELEASE -Dbos.repo.snapshot=$BOS_REPO_SNAPSHOT
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
          BOS_REPO_AK: ${{ secrets.BOS_REPO_AK }}
          BOS_REPO_SK: ${{ secrets.BOS_REPO_SK }}
          BOS_REPO_RELEASE: ${{ secrets.BOS_REPO_RELEASE }}
          BOS_REPO_SNAPSHOT: ${{ secrets.BOS_REPO_SNAPSHOT }}

      # publish to github
      - name: Set up GitHub Packages
        uses: actions/setup-java@v4
        with: # running setup-java again overwrites the settings.xml
          java-version: '17'
          distribution: 'temurin'

      - name: Publish to GitHub Packages
        run: mvn clean deploy -P github-packages-deploy -pl :base-cluster,:base-env-provider,:base-env-provider-spi,:base-hlc,:base-crdt-store,:base-crdt-service,:base-logger,:base-hookloader,:base-kv-store-balance-spi,:bifromq-dist-spi,:bifromq-plugin-archetype,:bifromq-plugin-context,:bifromq-plugin-main,:bifromq-plugin-auth-provider,:bifromq-plugin-event-collector,:bifromq-plugin-resource-throttler,:bifromq-plugin-sub-broker,:bifromq-plugin-setting-provider -am -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}